# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/ruby:3.1.2-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.6.16-ram
        environment:
          POSTGRES_HOST: 127.0.0.1
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust

      - image: redis

    working_directory: ~/repo

    environment:
      PG_HOST: localhost
      PG_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
      RAILS_ENV: test
      DATABASE_URL: postgres://postgres@127.0.0.1:5432/coverband_service_demo_test

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - run: sudo apt install -y postgresql-client || true

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rake db:reset db:migrate

      # compile assets
      - run:
          name: JS setup
          command: |
            yarn install
            NODE_ENV=test bundle exec rails webpacker:compile

      # run tests!
      - run:
          name: run tests
          command: |
            TEST_FILES="$(circleci tests glob "test/**/*_test.rb" | \
              circleci tests split --split-by=timings)"
              bundle exec rake test
